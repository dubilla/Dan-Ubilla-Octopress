<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dan Ubilla]]></title>
  <link href="http://danubilla.com/atom.xml" rel="self"/>
  <link href="http://danubilla.com/"/>
  <updated>2016-01-31T22:41:06-05:00</updated>
  <id>http://danubilla.com/</id>
  <author>
    <name><![CDATA[Dan Ubilla]]></name>
    <email><![CDATA[dan.ubilla@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AngularUI Router and Injecting $state vs $stateParams]]></title>
    <link href="http://danubilla.com/blog/web-development/angularui-router-and-injecting-state-vs-stateparams.html"/>
    <updated>2016-01-31T19:31:00-05:00</updated>
    <id>http://danubilla.com/blog/web-development/angularui-router-and-injecting-state-vs-stateparams</id>
    <content type="html"><![CDATA[<p>AngularUI Router is the de facto routing library in the Angular world. It takes the traditional routing mechanisms, and builds a subtle, but brilliant abstraction upon them. Instead of merely listening for requests at a set of URLs, it creates the concept of a set of states, each one configurable with an optional URL. This abstraction allows for flexibility when refactoring routes, but most interestingly, it creates the concept of a current state and stores key-value parameters of that state. Both the application&rsquo;s state and state parameters are available for injection with $state and $stateParams respectively, although, as we&rsquo;ll see, only one is necessary for injection in any given controller.</p>

<!-- more -->


<p>The <code>$state</code> service provides a number of useful methods for manipulating the state as well as pertinent data on the current state. The current state parameters are accessible on the $state service at the <code>params</code> key. The <code>$stateParams</code> service returns this very same object. Hence, the <code>$stateParams</code> service is strictly a convenience service to quickly access the <code>params</code> object on the <code>$state</code> service.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">angular</span><span class="p">.</span><span class="nx">equals</span><span class="p">(</span><span class="nx">$state</span><span class="p">.</span><span class="nx">params</span><span class="p">,</span> <span class="nx">$stateParams</span><span class="p">)</span>
</span><span class='line'><span class="c1">// true</span>
</span></code></pre></td></tr></table></div></figure>


<p>As such, no controller should ever inject both the <code>$state</code> service and its convenience service, <code>$stateParams</code>. If the <code>$state</code> is being injected just to access the current parameters, the controller should be rewritten to inject <code>$stateParams</code> instead.</p>

<p>Let&rsquo;s take a look at a few examples to could be rewritten to minimize our injections and concerns and to generally clean up our controllers.</p>

<p><strong>Example: Only need to access state parameters</strong></p>

<p><em>Before:</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">MainCtrl</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">MainCtrl</span><span class="p">(</span><span class="nx">$state</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">label</span> <span class="o">=</span> <span class="nx">$state</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">active</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})();</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">&#39;MainCtrl&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;$state&#39;</span><span class="p">,</span> <span class="nx">MainCtrl</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>After:</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">MainCtrl</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">MainCtrl</span><span class="p">(</span><span class="nx">$stateParams</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">label</span> <span class="o">=</span> <span class="nx">$stateParams</span><span class="p">.</span><span class="nx">active</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})();</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">&#39;MainCtrl&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;$stateParams&#39;</span><span class="p">,</span> <span class="nx">MainCtrl</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p>In the above example, the controller only needs to access the parameters of the current state. Injecting the <code>$state</code> service is, therefore, unnecessary. Injective the convenience service here is preferred.</p>

<p><strong>Example: Need to both transition state and access params</strong></p>

<p><em>Before:</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">MainCtrl</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">MainCtrl</span><span class="p">(</span><span class="nx">$state</span><span class="p">,</span> <span class="nx">$stateParams</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">label</span> <span class="o">=</span> <span class="nx">$stateParams</span><span class="p">.</span><span class="nx">active</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">MainCtrl</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">goToBeta</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">$state</span><span class="p">.</span><span class="nx">go</span><span class="p">(</span><span class="s1">&#39;beta&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})();</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">&#39;MainCtrl&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;$state&#39;</span><span class="p">,</span> <span class="s1">&#39;$stateParams&#39;</span><span class="p">,</span> <span class="nx">MainCtrl</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>After:</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">MainCtrl</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">MainCtrl</span><span class="p">(</span><span class="nx">$state</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">label</span> <span class="o">=</span> <span class="nx">$state</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">active</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">MainCtrl</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">goToBeta</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">$state</span><span class="p">.</span><span class="nx">go</span><span class="p">(</span><span class="s1">&#39;beta&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})();</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">&#39;MainCtrl&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;$state&#39;</span><span class="p">,</span> <span class="nx">MainCtrl</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p>In this example, we are using the <code>$state</code> service for its methods and not just for the parameters data it holds. In this case, again, we see that we do not need to inject both services. We can stick with the <code>$state</code> service and merely access the <code>params</code> key on the service.</p>

<p>As your controllers increase in complexity, so, too, do the benefits of including one service or the other. The list of injected services acts as a signature for a controller. Keeping this list lean is imperative to ensuring the controller&rsquo;s purpose is communicated efficiently. Ensuring that only one of the $state and $stateParams services will only help your projects&#8217; overall readability.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA['stringify_keys' Error on update_attributes]]></title>
    <link href="http://danubilla.com/blog/web-development/stringify-keys-error-on-update-attribute.html"/>
    <updated>2014-03-30T09:30:00-04:00</updated>
    <id>http://danubilla.com/blog/web-development/stringify-keys-error-on-update-attribute</id>
    <content type="html"><![CDATA[<p>Rails is a fantastic framework to develop with, but it can occasionally be unforgiving when it comes to error throwing. I was recently coding up a soft delete method in a model when Rails gave me the perplexing error: &ldquo;Undefined Method `stringify_keys&#8217;&rdquo;. I wasn&rsquo;t calling stringify_keys anywhere in my method nor was it anywhere in my model. A grep through the app directory of the codebase came up empty as well, and I was stumped.</p>

<!-- more -->


<p>As it turns out, the error was being thrown from deeper in the code than in my application, but it was, in fact, my code that was in error.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">remove!</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">update_attributes</span><span class="p">(</span><span class="ss">:status</span><span class="p">,</span> <span class="s1">&#39;removed&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The error lies in the arguments that are being passed into update_attributes. update_attributes expects one argument, a hash, whereas, I am providing two arguments, a key and a value. The error is exactly four characters long. The corrected code is below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">remove!</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">update_attributes</span><span class="p">(</span><span class="n">status</span> <span class="o">=&gt;</span> <span class="s1">&#39;removed&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>h/t to <a href="http://stackoverflow.com/questions/7542774/undefined-method-stringify-keys-when-calling-update-attributes">Stack Overflow</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating a New Post for Octopress from Zsh]]></title>
    <link href="http://danubilla.com/blog/web-development/creating-a-new-post-for-octopress-from-zsh.html"/>
    <updated>2014-01-31T00:17:00-05:00</updated>
    <id>http://danubilla.com/blog/web-development/creating-a-new-post-for-octopress-from-zsh</id>
    <content type="html"><![CDATA[<p>A couple of years back, I made the switch from bash to zsh. I did so mainly because I saw <a href="" title="http://code.tutsplus.com/tutorials/how-to-customize-your-command-prompt--net-24083&quot;, &quot;Customizing Your Command Prompt on Nettuts">a fantastic post</a> on customizing the command prompt that I dove into head first, and I&rsquo;ve stuck with it for the slightly improved tab completion. Your mileage may vary with regards to zsh, but I always find it difficult to do without it when I end up working on somebody else&rsquo;s machine. Despite the improvement, there are a few differences between the shells, and I&rsquo;ve come across a scipt or two that wasn&rsquo;t especially zsh friendly. One of those is the very rake task that created this blog post.</p>

<!-- more -->


<p>To create a post in Octopress from bash, you simply need to run the command:</p>

<blockquote><p>rake new_post[&ldquo;One man forgot to account for zsh&hellip;&rdquo;]</p></blockquote>

<p>Running the same command from zsh leaves you with a cryptic error:</p>

<blockquote><p>zsh: no matches found: new_post[One man forgot to account for zsh&hellip;]</p></blockquote>

<p>Zsh escapes the quotes necessary to name the new blog post, as you can see by the error that is output. The syntax that creates a blog post in bash causes zsh to begin attempting to match a filename.</p>

<p>To create a post in Octopress from zsh, you simply need to run the command:</p>

<blockquote><p>rake &ldquo;new_post[One man forgot to account for zsh&hellip;]&rdquo;</p></blockquote>

<p>It&rsquo;s a minor inconvenience, and one that could probably be solved by some extended documentation on the Octopress site. No harm, no foul; zsh Octopress bloggers just need to remember the change in syntax.</p>

<p>Any other zsh tips for Octopress? Or any noteworthy zsh &ldquo;workarounds&rdquo; to share? Drop them in comments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introducing MaxWell]]></title>
    <link href="http://danubilla.com/blog/web-development/introducing-maxwell.html"/>
    <updated>2013-09-04T11:48:00-04:00</updated>
    <id>http://danubilla.com/blog/web-development/introducing-maxwell</id>
    <content type="html"><![CDATA[<p>In my last post, Yeoman, Backbone, and a Smarter Client, I discussed diving into the new development-minded technologies that have flooded the JS proverbial toolbox. The first project I put together with said tools is <a href="http://dubilla.github.io/Maxwell/">MaxWell</a>, a single-page web app for graphing your point totals in ESPN&rsquo;s Fantasy MaxPart games (think Pigskin Pick&#8217;em and ESPN&rsquo;s march madness game, Tournament Challenge). <a href="http://yeoman.io/">Yeoman</a> and <a href="https://github.com/yeoman/generator-backbone">the Yeoman Backbone generator</a> were used to bootstrap the application. <a href="http://requirejs.org/">RequireJS</a> is used to manage dependencies. The application itself lives inside a <a href="http://backbonejs.org/">Backbone</a> framework. <a href="http://gruntjs.com/">Grunt</a> is used to build the webapp and prepare it for deployment. Finally, the app is deployed using git and it lives on <a href="http://pages.github.com/">GitHub pages</a>.</p>

<!-- more -->


<p>All in all, I could not be more pleased with the single-page web app tools I&rsquo;ve discovered and workflow I&rsquo;ve cultivated. Now that I have the workflow in place, I&rsquo;m already looking to the next side project, FoursightSquare, to see just how quickly I can spin up a web app, start iterating on it, and deploy quickly with each iteration. You can follow along in the meanwhile on its Github page.</p>

<p>It&rsquo;s important to note that MaxWell is a proof of concept with hard-coded values. Given an API, this web app could exist in its current form, or, in an API&rsquo;s absence, this app could be pushed to ESPN&rsquo;s servers and hooked up with just a little bit of server-side code.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pushing Your Octopress Blog to Github]]></title>
    <link href="http://danubilla.com/blog/web-development/pushing-your-octopress-blog-to-github.html"/>
    <updated>2013-08-25T14:12:00-04:00</updated>
    <id>http://danubilla.com/blog/web-development/pushing-your-octopress-blog-to-github</id>
    <content type="html"><![CDATA[<p>I have just gotten started using the Octopress framework for blogging, and I love it. The setup process is unbelievably well-documented, and if you&rsquo;re familiar with Git and Ruby projects, you&rsquo;ll pick it up fairly quickly. The only issue I had early on was pushing my new blog up to Github for version control. It&rsquo;s a little tricky since the first step is cloning from Brandon Mathis&#8217; Octopress repo, but the fix is relatively simple.</p>

<!-- more -->


<p>Once you&rsquo;ve clone the Octopress project, thrown up a few posts, and tidied up any configuration you want, you&rsquo;re going to want to get the repo into version control using Git. If you&rsquo;re like me, you&rsquo;re also going to want to push it up to Github. I was surprised upon first trying to do this, that my repo was already set up with a remote named origin. Of course, it was; I had cloned from the Octopress repo. I went ahead and pulled a quick switcheroo before add the remote Github origin.</p>

<blockquote><p>git rename remote clone
git add remote origin [github url]</p></blockquote>

<p>It feels a little hacky, but it got the trick done.</p>

<p>Pretty fitting that I&rsquo;m writing about using Octopress as my first post written on the service, huh?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Yeoman, Backbone, and a Smarter Client]]></title>
    <link href="http://danubilla.com/blog/web-development/yeoman-backbone-and-a-smarter-client.html"/>
    <updated>2013-08-24T09:29:00-04:00</updated>
    <id>http://danubilla.com/blog/web-development/yeoman-backbone-and-a-smarter-client</id>
    <content type="html"><![CDATA[<p>I have gone through a number of tutorials on newer front-end tools like AngularJS, Grunt, and Backbone. Nothing compares to building something of your own, though. After dipping my toe into the water numerous times before, I dove into the deep end and started combining these tools on my own.</p>

<!-- more -->


<p>I started with <a href="http://yeoman.io">Yeoman</a>, as one does. It&rsquo;s a tool to bootstrap your web app. With a few keystrokes on the command line, you have all the files you need to run a web application. Out of the box you get some good tools: the <a href="http://html5boilerplate.com/">HTML5 Boilerplate</a>, <a href="http://jquery.com/">jQuery</a>, and <a href="http://modernizr.com/">Modernizr</a>. You&rsquo;re immediately given the option to add <a href="http://requirejs.org/">RequireJS</a> for handling JavaScript loading dependencies on top of a few other options to get your web app bootstrapped even further. Yeoman starts to get super fancy, however, with its generators. Generators are bundles that allow you to bootstrap on top of the default Yeoman options. If you&rsquo;re building an AngularJS, Backbone or Ember app, download a generator for your project before you start Yeoman up for your latest project.</p>

<p>With Yeoman in play, I decided to go with Backbone, and running Yeoman with <a href="https://github.com/yeoman/generator-backbone">the Backbone generator</a> left me with the perfect shell of a Backbone app to get started. Backbone is an MV<em> framework designed to separate application logic from view logic. (Note the * instead of a C. There are no controllers in Backbone. Instead, much of the logic that ties up the model and the view is actually done in the view JS.) I chose Backbone over other frameworks for a couple of reasons. I really enjoy the way Backbone handles the View. I&rsquo;m able to bind my model and view, and thus, keep my HTML completely separated from whatever framework I&rsquo;m using at the time. I also enjoy the plug-and-play nature of Backbone. I get MV</em> out of the box for very little code weight. If I want to add dependency injection and AMD through RequireJS, I can run that variety of the framework. Backbone gives you options. Thirdly, I really just came across more articles and tutorials that I enjoyed from the Backbone community. When it comes down to it, the community might be the most important reason for choosing a new technology. Regardless of the framework you prefer, choose one, and get coding on the front-end, smarter and faster.</p>

<p>I&rsquo;ll save my experience with Grunt for another post. The past month of diving into these front-end technologies has been incredibly eye-opening. Client-side code tools have evolved immensely in the past couple of years, and the community creating and maintaining these tools is truly inspiring. Spinning up a web app can be daunting. Creating structure for your code can leave you paralyzed before you&rsquo;ve even begun your own project. Yeoman and Backbone are two tools I&rsquo;m ready to go to war with for every new static-site project I begin.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Submodules]]></title>
    <link href="http://danubilla.com/blog/web-development/git-submodules.html"/>
    <updated>2013-07-30T23:50:00-04:00</updated>
    <id>http://danubilla.com/blog/web-development/git-submodules</id>
    <content type="html"><![CDATA[<p>I normally feel fairly well-versed in Git, which is to say, I can commit code, I can see what&rsquo;s happening, and I generally know enough to not screw anything up. I thought my Git Fu was tight enough that I at least had a good grasp on all that could be done with the version control system until I came across a project that used submodules. In Git, a submodule is a connection from one repository to another. Say, for instance, you&rsquo;re working on a suite of similar products. You want each one to have its own repository. That makes plenty of sense. But suppose each of these products shared a common messaging platform. Instead of maintaining this same code across the suite of products, which would defeat a lot of the purpose of setting up a VCS, you can give it its own subrepo, and have each product in your suite set up a submodule to reference that repo. All seems well and good, but there are a few gotchas to keep in mind.</p>

<!-- more -->


<p>Let&rsquo;s clone a repo that uses submodules down to local. You start making some changes, gunning away on some code, and you&rsquo;re feeling really good. So, you decide to check your progress so far with a good old <code>git diff</code>. Everything looks exactly as you expect except for this one bit of output:</p>

<blockquote>
&#8212; a/lib/messaging
+++ b/lib/messaging
</blockquote>


<p>That seems odd. There should be all sorts of good stuff in the messaging directory. And there is, but as it turns out, your main repository, or superrepo, is not keeping track of any of the minutiae inside the subrepo. All it keeps track of is the commit id associated with that repo. When you need to update your subrepo, a simple <code>git submodule update</code> command runs through your list of submodules and pulls from each of the associated subrepos. How does your superrepo know about the submodules? That brings us to the .gitmodules file in the root of your project.</p>

<p>The .gitmodules file is a git config file that contains references to each of your repo&rsquo;s submodules. Each reference consists of a name, a path to the submodule in your repo, and a link to where the subrepo can be cloned from. Going back to our example, let&rsquo;s take a look at how our suite of products would share a messaging library:</p>

<blockquote>
[submodule &#8220;messaging&#8221;]
      path = lib/messaging
      url = git://github.com/dubilla/Messaging.git
</blockquote>


<p>As you can imagine, your .gitmodules config file should be included in your repot and should NOT be listed in your .gitignore file. Solid. We&rsquo;re getting a decent handle on this whole Git submodules thing. Now let&rsquo;s go back to a simpler time when we first cloned the repo with submodule references, but this time, let&rsquo;s do things the right way by initializing our submodules locally.</p>

<p>Alright, we&rsquo;ve cloned our repo, and we&rsquo;re ready to set up our submodules. We&rsquo;re combing through the directory structure, and we notice an empty <em>lib/messaging</em> directory. This is normal. The superrepo knows it has a directory there, it just has no concept of what&rsquo;s going on inside it. Let&rsquo;s forge that connection. From the root of your repo, run <code>git submodule init</code> to create your .gitmodules file. Then, run <code>git submodule update</code> to get all of the code for each submodule in your project. Voilà. You&rsquo;re up and running your cloned repo with submodules in tow.</p>

<p>The title of this post is &ldquo;Git Submodules and Private Repos&rdquo;, so we&rsquo;re not quite out of the woods yet. There&rsquo;s one major caveat. If your submodule is referencing a private repo, you need to update your .gitmodules file to use a specific format for the path to that repo. That reference url must be of the format:</p>

<blockquote>git@github.com:[user]/repo.git</blockquote>


<p>Otherwise, you&rsquo;re likely to get an error stating that the repo could not be found. One last thing to note regarding updating the .gitmodules file. Sometimes editing your .gitmodules file is not enough to update your submodule references. Git submodules contain an oddly two-tiered configuration between the .gitmodules and .git/config/ files. So if you update .gitmodules and start running git submodule update and seeing an older path listed in the output, there&rsquo;s a good chance the .git/config file simply never got updated. You can fix this by hand in the file or running <code>git config submodule.[submodule].url [newurl]</code> to update the config file. This can be fairly annoying, but once submodules are set up correctly for your repo, you shouldn&rsquo;t have to update any of them on a regular basis.</p>

<p>Overall, submodules seem like a tool best suited for larger products and larger teams. I don&rsquo;t have any experience regarding referencing libraries I don&rsquo;t own as submodules, which could bring in a whole new world of submodule management. Imagine tweaking the library locally to fit your projects&#8217; needs, and then getting the latest on the subrepo as commits are pushed completely separate of your implementation. While it could be very useful, you&rsquo;ll most likely have a fair amount of merging in your future. Have you dealt with submodules in this advanced way? Are you just getting started like I am? Have you started <a href="http://codingkilledthecat.wordpress.com/2012/04/28/why-your-company-shouldnt-use-git-submodules/" title="Coding Killed the Cat Blog">bemoaning submodules</a> and <a href="http://blogs.atlassian.com/2013/05/alternatives-to-git-submodule-git-subtree/" title="Atlassian Blog">praising</a> git subtrees yet? Start some talking in the comments.</p>

<h4>References</h4>


<ol>
<li><a href="http://git-scm.com/book">Pro Git</a>: <a href="http://git-scm.com/book/en/Git-Tools-Submodules"><a href="http://git-scm.com/book/en/Git-Tools-Submodules">http://git-scm.com/book/en/Git-Tools-Submodules</a></a>, as always is fantastic and provided most of the guidance in my Git submodule education</li>
<li><a href="https://groups.google.com/forum/#!forum/github">Github Google Groups</a>: <a href="https://groups.google.com/forum/#!topic/github/B5VuXiO3aU0"><a href="https://groups.google.com/forum/#!topic/github/B5VuXiO3aU0">https://groups.google.com/forum/#!topic/github/B5VuXiO3aU0</a></a>, paved the path to healing my private repo submodule wounds.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bower: Your Third-Party Front-End Code Assistant]]></title>
    <link href="http://danubilla.com/blog/web-development/bower-your-third-party-front-end-code-assistant.html"/>
    <updated>2013-07-20T10:36:00-04:00</updated>
    <id>http://danubilla.com/blog/web-development/bower-your-third-party-front-end-code-assistant</id>
    <content type="html"><![CDATA[<p>As I&rsquo;ve started diving into more client-side heavy web apps, I&rsquo;m finding myself constantly asking why any given tool was developed. Lots of web technologies can look cool, but what problem is each trying to solve. Bower was one that mystified me, even as I let <a href="http://yeoman.io/">Yeoman</a> go ahead and install it in my latest project. It describes itself as a package manager for the web. As a user of npm, I was aware of various packages and tools that can be installed, but I did not understand what packages Bower could be capable of handling. What problem is Bower trying to solve?</p>

<!-- more -->


<p>It turns out Bower speeds up my work process in a way I didn&rsquo;t really complain about, but now that I&rsquo;ve seen the light, I am never going back. For Bower, any third-party code library for the front-end is a package. Backbone, RequireJS, Jasmine, and countless other scripts can all be installed in your project with a simple</p>

<blockquote>bower install</blockquote>


<p>command. If you want to be see what&rsquo;s out there and available, search through available Bower packages with</p>

<blockquote>bower search</blockquote>


<p> Feel free to mess around with Bower, and when you&rsquo;re done, simply</p>

<blockquote>bower uninstall</blockquote>


<p> any scripts you deem unnecessary.</p>

<p>I never thought the workflow of cloning a git repository into a local project was ever much of a pain, but I will gladly let Bower do all of the heavy lifting for me. I think the ability to quickly uninstall a package is hands-down the best feature. Give Bower a shot even for your smaller projects, and I doubt you&rsquo;ll go back either.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery Selectors with Valueless Attributes]]></title>
    <link href="http://danubilla.com/blog/web-development/jquery-selectors-with-valueless-attributes.html"/>
    <updated>2012-07-26T12:06:00-04:00</updated>
    <id>http://danubilla.com/blog/web-development/jquery-selectors-with-valueless-attributes</id>
    <content type="html"><![CDATA[<p>It goes without saying that the possibilities involving jQuery Selectors are vast. I recently needed to select all table cells within a given table that only spanned one row. The start to this seemed easy enough. The not selector would be able to target all td’s with a rowspan, but how could the selector cover all possible rowspans? It might be easy to assume that the values would be small enough.</p>

<!-- more -->




<blockquote>
jQuery(“td:not([rowspan=&#8217;2&#8217;]):not([rowspan=&#8217;3&#8217;]):not([rowspan=&#8217;4&#8217;])”)
</blockquote>


<p>This selector becomes unwieldy quickly. Not only does the selector look daunting, the code is simply fragile. What happens when a table cell with a rowspan of 5 comes along. It becomes a silly arm’s race. Luckily, jQuery allows attribute selectors without values. So a simple selector such as</p>

<blockquote>
jQuery(“td:not([rowspan])”)
</blockquote>


<p>works beautifully.</p>

<p>This of course makes more sense when you consider attributes that don’t necessarily need values. So selecting all inputs that aren’t disabled can be done like so:</p>

<blockquote>
jQuery(“input:not([disabled])”)
</blockquote>


<p>Any other easy jQuery selector involving attributes without values? Share them below!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTML5 and Media Queries]]></title>
    <link href="http://danubilla.com/blog/web-development/html5-and-media-queries.html"/>
    <updated>2011-07-29T22:50:00-04:00</updated>
    <id>http://danubilla.com/blog/web-development/html5-and-media-queries</id>
    <content type="html"><![CDATA[<p>I finally took it upon myself to tackle HTML5, and you are looking at the results.  Of course, implementing any form of HTML5 isn&rsquo;t necessarily rewriting all of your markup with fancy new &lt;section&gt; and &lt;nav&gt; tags nor does it have to be adding HTML5 native Javascript.  The first step is the simplest, but it&rsquo;s a first step nonetheless.  I started by simply replacing my doctype with &lt;! DOCTYPE HTML5&gt;.  Gorgeous in its simplicity, no?  This change alone will give you HTML5  features in all modern browsers<sup>1</sup>.</p>

<!-- more -->


<p>The first step was so easy, I decided to take some more.  I ripped out the header and footer of my Wordpress template and filled it in with some of <a title="Paul Irish" href="http://paulirish.com/" target="_blank">Paul Irish</a>&rsquo;s <a title="HTML5 Boilerplate" href="http://html5boilerplate.com/" target="_blank">HTML5 Boilerplate</a>.  After, fighting off the fright and intimidation, I was able to follow along with the comments and decide what was needed from the boilerplate, what I wanted, and what I could toss away.  There&rsquo;s a corresponding CSS file with fantastic default styles and even some placeholders for media queries.  Which, in fact, is where I tidied up my work.  Check out this site on webkit-enabled mobile device (iPhone, Android, etc), and you should see a nice, readable mobile layout.  It&rsquo;s by no means perfect, but I would consider the site mobile-enhanced.</p>

<div class="references">
<h5>References</h5>
<ol>
    <li>John Resig, HTML5 DOCTYPE, <a title="http://ejohn.org/blog/html5-doctype/" href="http://ejohn.org/blog/html5-doctype/" target="_blank">http://ejohn.org/blog/html5-doctype/</a>
</li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Davis Square Flag]]></title>
    <link href="http://danubilla.com/blog/design/davis-square-flag.html"/>
    <updated>2010-06-26T14:10:00-04:00</updated>
    <id>http://danubilla.com/blog/design/davis-square-flag</id>
    <content type="html"><![CDATA[<p>I came across <a title="Neighborhood Flags" href="http://awesome.good.is/projects/neighborhood-flags/index.html">this project</a> for Good magazine in which a collection of designers and illustrators were called upon to design flags for their respective neighborhoods.  Some were beautiful in their simplicity, others appeared to be the product of designers trying to show of their skills rather than fit the creative limitations.</p>

<!-- more -->


<p>Needless to say, I went for the more simplistic route in designing a flag for my Boston-area neighborhood, Davis Square.</p>

<p><img class="aligncenter size-full wp-image-143" src="http://danubilla.com/images/author/davis-square-flag.gif" width="250" height="168" title=";davis square flag text' 'Davis Square Flag'" ></p>

<p>Have a design for your neighborhood you want to share?  Critique of mine?  Share them in the comments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Importance of bind() in jQuery]]></title>
    <link href="http://danubilla.com/blog/web-development/the-importance-of-bind-in-jquery.html"/>
    <updated>2010-05-17T12:00:00-04:00</updated>
    <id>http://danubilla.com/blog/web-development/the-importance-of-bind-in-jquery</id>
    <content type="html"><![CDATA[<p>The jQuery library has always been held in high appeal for its gradual learning curve and generally quick implementation.  The API is concise and includes such simple event watching nomenclature as show(), hide(), ready(), submit(), focus(), and more.  The one popular event watcher that I kept seeing popping up in script after script was the generic bind() function.  I never fully understood what made implementing the bind function any more desirable than click() or focus() until working on a larger scale javascript project the other day.</p>

<!-- more -->


<p><em>Any element with two event watchers where one must be expired <strong>requires</strong> the bind function.</em></p>

<p>Imagine a tabbed user interface wherein the content is loaded via ajax.  If both event watchers are on click, the ajaxing needs to be expired while the tabbed javascript must stay active.  With binding, an event can be passed that can then be expired at the end of the function.  The bind function gives you a greater amount of control over event expiration than any of the jQuery shortcut functions can provide.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Maintenance Month]]></title>
    <link href="http://danubilla.com/blog/web-development/maintenance-month.html"/>
    <updated>2010-05-10T14:38:00-04:00</updated>
    <id>http://danubilla.com/blog/web-development/maintenance-month</id>
    <content type="html"><![CDATA[<p>Following Chris Coyier&rsquo;s <a href="http://css-tricks.com/may-is-maintenance-month/">lead</a>, I decided to go back and clean up some parts of the re-design I had neglected.  It took some digging into pages and posts that I barely touched, and that have barely been seen, so I was glad to have the push.</p>

<!-- more -->


<p>Some fixes you&rsquo;ll see:</p>

<ul>
    <li>Images from the Archives: After moving my site from /blog to the root of my domain, a few image links became broken.  I was fearful that I&#8217;d have to dig into the meta data of the wordpress install to designate the new image folder, but I had actually linked the images on the site absolutely, a big no-no regardless.  Simple fix, and finally implemented.</li>
    <li>Archive, Post, and Page Layout: I wasn&#8217;t sure at the time about including the sidebar on all child pages, so I left these layouts in limbo, including the sidebar, but not doing it very well.  The CSS was in place, so a bit more html markup completed the changes.</li>
    <li>Post Navigation: The post navigation had some float issues.  Since every element in the post navigation div was floated, a clearing element needed to be introduced so that the subsequent html didn&#8217;t run right up into it.  IE7 has a margin-bottom bug with floated elements, so instead of introducing a bottom margin on the post navigation, I merely threw a top margin on the post.</li>
</ul>


<p>Have you started maintenance on your own site this month?  Plan to begin in the coming weeks?  Leave a comment.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Like a plane crash that never hits the ground]]></title>
    <link href="http://danubilla.com/blog/music/like-a-plane-crash-that-never-hits-the-ground.html"/>
    <updated>2010-01-27T20:04:00-05:00</updated>
    <id>http://danubilla.com/blog/music/like-a-plane-crash-that-never-hits-the-ground</id>
    <content type="html"><![CDATA[<p>As a songwriter, I&rsquo;ve always been amazed at what comes out depending on what&rsquo;s going on in my life.  When things were going well for me, my friend and bandmates would joke that things needed to get worse or the music would suffer.  They were more right than they might have thought.</p>

<!-- more -->


<p>Matt Skiba on Alkaline Trio&rsquo;s new album, This Addiction:</p>

<blockquote>
Yeah, I was pretty angst-y and heartbroken when I wrote all of those songs. And I think that has a lot to do with the tone of the record because I hadn’t been in that sort of mind frame for a while. I think a lot of people feel angry and heartbroken about whatever it is they might be going through—politics, relationships, friendships, a cat dying—whatever the case may be. And I had some things go on in my life that just brought me back to that very drunk, very angry and sad young man that I was ten years ago. I never went completely off the deep end but I had some dark times and therefore there is some darkness. Not spooky dark, just sad and angry shit.</blockquote>


<p>The rest of the interview can be found <a href="http://suicidegirls.com/interviews/Matt%20Skiba%3A%20Alkaline%20Trio">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Preparing DanUbilla.com 2.0]]></title>
    <link href="http://danubilla.com/blog/web-development/preparing-danubilla-dot-com-2-dot-0.html"/>
    <updated>2010-01-02T17:58:00-05:00</updated>
    <id>http://danubilla.com/blog/web-development/preparing-danubilla-dot-com-2-dot-0</id>
    <content type="html"><![CDATA[<p>When I threw together the design you see on this very blog, I did it haphazardly and quickly just to get a bit of presentation to frame my entries.  It was always meant to be a dynamic frame, one that I could use as a training ground to various tips and tricks I picked up through my work, both professional and personal.  Looking at the current layout and site hierarchy in more depth, I&rsquo;ve decided to scratch most of what little you see here and strip down to the bare essentials.  By re-focusing on the content before continuing on with exploring new design techniques, I&rsquo;ll be able to re-imagine this web space to become not only the design and development playground that I originally intended it to be, but to be a proper gallery of my accomplishments and pursuits.  In breaking things down, I plan on following three tenants and lines of thinking that I&rsquo;ve come across in the past six months since introducing this site:</p>

<!-- more -->


<ul>
<li><a title="Make Your Mockup in Markup" href="http://24ways.org/2009/make-your-mockup-in-markup">Make Your Mockup in Markup</a> &ndash; a fantastic argument to ditch Photoshop and design straight in the browser by Meagan Fisher of <a title="Simple Bits" href="http://simplebits.com/">Simplebits</a>.</li>
<li><a title="Walls Come Tumbling Down" href="http://www.stuffandnonsense.co.uk/blog/about/walls_come_tumbling_down_presentation_slides_and_transcript/">Walls Come Tumbling Down</a> &ndash; the original presentation by Andy Clarke of <a title="Stuff and Nonsense" href="http://www.stuffandnonsense.co.uk/">Stuff and Nonsense</a> that inspired the preceeding article.</li>
<li><a href="http://dowebsitesneedtolookexactlythesameineverybrowser.com/">This fabulous idea</a> that allows me the exploration of cutting-edge technologies without forgetting the end user.</li>
</ul>


<p>In addition to these inspirations, the new site will include a focus on typography and minimalism, both of which should provide a new spotlight on content.</p>

<p>What you&rsquo;ll see as a visitor will be a constantly changing design as I will be working in the browser, and, for the most part, pushing updates to the live site as quickly as possible.  While this is not the most professional approach, I will consider this site an academic case study and web development playground for the next few months.  For those interested in design and coding, I will be posting periodic updates on the what, why, and how of the developing site.  For those interested in areas of the site, I would ask you to not mind the mess, but the idea is that no proverbial under construction sign is needed, that the site will be functional and accessible at every stage.</p>

<p>Thanks for staying tuned and for your general interest.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enabling cURL in XAMPP]]></title>
    <link href="http://danubilla.com/blog/web-development/enabling-curl-in-xampp.html"/>
    <updated>2009-12-12T16:04:00-05:00</updated>
    <id>http://danubilla.com/blog/web-development/enabling-curl-in-xampp</id>
    <content type="html"><![CDATA[<p>Implementing cURL in an XAMPP environment for the first time can cause a quick, early headache.  The most common error seen is a simple curl_init() can not be found.  Luckily, the solution is most likely simple.   cURL comes included with Apache but not installed, so you have to go in and turn it on yourself.</p>

<p>Open up your php.ini located under the /php directory.  The line that needs editing will read: ;extension=php_curl.dll.  Simply remove the semi-colon to uncomment the line.  Then restart Apache to finish the change!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Going Back]]></title>
    <link href="http://danubilla.com/blog/ramblings/going-back.html"/>
    <updated>2009-07-26T16:08:00-04:00</updated>
    <id>http://danubilla.com/blog/ramblings/going-back</id>
    <content type="html"><![CDATA[<p><img class="aligncenter size-full wp-image-96" src="http://danubilla.com/images/www/shedeservesit.jpg" width="400" height="268" title="She Deserves It" alt="She Deserves It"></p>

<p>The ambiguity of the narrator on this Post Secret really struck a chord.  The possibilities of all three roles are endless and striking.  Why did the male lead leave?  What is the female lead doing in the meanwhile?  We do know the male character is coming back; it&rsquo;s simply a matter of when.  How is the narrator related to either of the main characters?  And what to make of the starry, dreamy night sky backdrop?</p>

<p>It works because the reader has enough information to create their own version of the story.  What&rsquo;s your version?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sleeping Off The Hangover]]></title>
    <link href="http://danubilla.com/blog/movies/sleeping-off-the-hangover.html"/>
    <updated>2009-06-28T22:52:00-04:00</updated>
    <id>http://danubilla.com/blog/movies/sleeping-off-the-hangover</id>
    <content type="html"><![CDATA[<p><img class="aligncenter" src="http://danubilla.com/images/www/hangover-header.jpg" width="300" height="199" title="Going Down" alt="The Hangover Wolfpack Rides an Elevator Down"></p>

<p>&ldquo;Really?  You haven&rsquo;t seen it yet?&#8221;  I heard these words uttered early last week, mere days after The Hangover came out.  How had a movie ripped through the 18-34 demographic so quickly and earnestly?  For an age group that responds best to star power or word-of-mouth when it comes to its comedies, an ensemble cast starring, frankly, nobody managed to beat the Will Ferrell vehicle, Land of the Lost, $43.3 to $19.5 million.  The answer isn&rsquo;t in the marketing, which was neither ubiquitous nor varied by any considerable degree.  yet the very reason for the film&rsquo;s initial success is the same that will stifle the movie&rsquo;s longevity.  The Hangover attracts two separate sects of young moviegoers, and neither faction loved the movie for reasons that will hold their attention in six months time.</p>

<!-- more -->


<p><img class="alignleft" src="http://danubilla.com/images/www/hangover-tyson.jpg" width="230" height="270" title="Mike Tyson" alt="A cameo by a young Tyson just seems fresher"></p>

<p>At it&rsquo;s core, The Hangover was a family movie for friends.  The economic success of family films are generally guaranteed because, well, kids can&rsquo;t go to the movies alone.  An animated movie that culls one member of a family of four, sells tickets to all four members.  Likewise, The Hangover was meant for a group of friends.  Chances are if one of your friends wanted to see the movie, all of your friends got together.  It became a miniature event of sorts.  And just like animated movies are marketed specifically to kids, The Hangover was marketed point blank at your friends that laugh at lowest common denominator humor.  If you&rsquo;re questioning this, the smoking gun was Mike Tyson, and you&rsquo;re precisely the friends that convinced the group to head to the theatre.  This is not a bad thing.  In fact, it&rsquo;s a great thing.  You brought people together.  This will not happen with the DVD release.</p>

<p>Before I go any further, I must confess.  I loved the movie.  The humor is blatant and ridiculous; the type of story that is exaggerated with each telling.  The characters weren&rsquo;t as empathetic as has come to be expected with the influx of Apatow-produced comedies of the past few years, and the change was surprisingly refreshing.  It all fit the testosterone-fueled cinematic adventure expected out of a movie called The Hangover.  Kudos to Todd Phillips.</p>

<p>As much as I enjoyed the movie, it will always look better in retrospect.  In the exact way that the movie built its success on group viewing, it will never find its success on any medium that won&rsquo;t create a memory.  Just like nobody likes drinking alone, the movie simply won&rsquo;t work without a group atmosphere.  Of course, the movie&rsquo;s greatest reason for long-term failure is that, like a good night out, it simply won&rsquo;t be quite as good when you go back to remember it.</p>

<p>The reasons are two-fold.  The most memorable comedies, in particular of the past decade, have relied on quotability.  Memorable quotes infuse a movie into our culture, give it life and personality even when the movie&rsquo;s not even playing.  The Hangover had none.  People walked out of Old School saying, &ldquo;I&rsquo;ll do one&rdquo;; they left Anchorman saying, &ldquo;I&rsquo;m kind of a big deal.&#8221;  Audiences left The Hangover saying, &#8220;Wasn&rsquo;t that one part funny?&#8221;  Yes, yes it past-tense-was funny.</p>

<p><img class="alignleft" src="http://danubilla.com/images/www/hangover-mcconaughey.jpg" width="300" height="201" title="McConaughey 'No, Matthew, I don't know who I want to punch more'" ></p>

<p>Speaking of Old School and Anchorman, the movies of the Frat Pack sound like a passage from the Bible.  Old School begat Anchorman and Wedding Crashers.  Anchorman begat Talladega Nights and The Forty-Year Old Virgin.  Virgin begat Knocked Up, ad nauseum.  There is no heirarchy, no mentorship in the cast of The Hangover.  Sure, Todd Phillips directed both The Hangover and Old School.  Yes, Zach Galifianakis steals the spotlight, and he&rsquo;s nothing more than a poor man&rsquo;s Will Ferrell.  Ed Helms simply doesn&rsquo;t have the star power his predecessor, Steve Carrell, has, and if Bradley Cooper is destined for any career in films, it&rsquo;s more Matthew McConaughey than Vince Vaughn.  The Hangover is Cooper&rsquo;s own Dazed and Confused, the best movie he&rsquo;ll put out, but Cooper can&rsquo;t even pull it off with the sort of iconic line that McConaughey pulled off.</p>

<p>In a few years, what seemed like a highly memorable movie will fade from our memory like all those crazy nights that seemed so important the next day.  &ldquo;Remember that one time?&#8221;  &#8220;Oh yeah!&#8221;  In the end, there&rsquo;s nothing wrong with that.  A string of nights, or movies like this, and a cognizant memory is formed, friendships created and strengthened.  In the end, like any hangover, it will only fade with time.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Where Unexpected Matchups Happen]]></title>
    <link href="http://danubilla.com/blog/sports/where-unexpected-matchups-happen.html"/>
    <updated>2009-06-04T18:38:00-04:00</updated>
    <id>http://danubilla.com/blog/sports/where-unexpected-matchups-happen</id>
    <content type="html"><![CDATA[<p><img class="aligncenter" src="http://danubilla.com/images/www/kobe-howard.jpg" width="288" height="162" title="lakers-magic-tip 'Lakers Magic Tip'" ></p>

<p>Let&rsquo;s face it.  It&rsquo;s time to put the puppets away.  Kobe Bryant and LeBron James will not be meeting in the 2009 NBA Finals.  For the casual fan, this might be a deal-breaker, but it shouldn&rsquo;t be.  The sub-plots run deep.  With a solid Finals, the rejuvenation of the NBA that first broke with the 2008-2009 could build up just enough momentum to carry the league through to the summer of 2010.  As P Diddy would say, &ldquo;<a href="http://twitter.com/iamdiddy/status/1977889928" target="_blank">Let&rsquo;s Go!!1!</a>&rdquo;</p>

<!-- more -->


<p><img class="'alignleft size-full wp-image-69'" src="http://danubilla.com/images/www/kobe-lebron-puppets.jpg" width="288" height="162" title="kobe-lebron 'Kobe and LeBron Puppets'" ></p>

<p>Before we jump ahead to the positives of a Lakers/Magic Finals, let&rsquo;s quickly put our ghosts to rest on what was not meant to be.  A Cavaliers/Lakers match-up would have been an ABC executives&#8217; wet dream.  Nike already had their hands up the the teams&#8217; superstars&#8217; asses.  The average fans would have gathered at water coolers discussing the highlights they caught on SportsCenter in the morning.  Progress would have been made for all of four to seven games, and at the end of it, not one would be able to name more than three players on either team.</p>

<p>The 2008 NBA Finals was special because it put a solid bookmark on the mid-00s era.  It&rsquo;s no stretch to say the Spurs and Pistons played a boring brand of basketball, one that wasn&rsquo;t good for the game itself or the legacy of the league.  With the Lakers and the Celtics came a storied history, a renewed rivalry.  This year gives us two teams with startling differences.  It shouldn&rsquo;t be hard for each non-affiliated fan to pick the team they want to root for.</p>

<p><img class="alignright" src="http://danubilla.com/images/www/kobe-mean.jpg" width="300" height="168" title="kobe bryant mean mug scowl" alt="Kobe Mean Mugging"></p>

<p>The Lakers represent the machine.  They are the Empire.  The venerable Coach Phil Jackson is aiming for what would be a record 10th Championship win, the vilified superstar still looking to get out of the shadow of a friend and teammate turned enemy, the right-hand-man, Pau Gasol, who plays the X factor in the post, and well-put together supporting cast that realize a loss this year could send any one of them packing.  Despite being from the fun-loving, sports-semi-caring city of LA, it&rsquo;s the Lakers who bring the scowl, the fight, the sheer desire to win.   This is not always a good thing.</p>

<p>Rooting for the Lakers, in many ways, is rooting for history.  Years from now, the league will be better for Kobe having gotten his ring on his own.  Right now, Kobe has yet to win a championship as the best player on his own team.  How many other players whose greatness has been argued so vehemently has found themselves in the same position?  None.  Chances are, Bryant&rsquo;s not going to get his six to match Jordan, but with the way the game has changed over the past ten years, four would give the great debate a fantastic bit of legitimacy.</p>

<p>The Magic are everything the Lakers are not.  Led by young, fresh, baby-faced Dwight Howard, the Magic seem to always be smiling and always hitting their jumpers.  After Howard at the 5 spot, any one of Orlando&rsquo;s 1-4 can hit a J from anywhere on the court.  It&rsquo;s this match-up problem that led to the Cavaliers early exit, and Orlando&rsquo;s fun-loving spirit unseated the King before he could take his throne.  It&rsquo;s the classic last cup in beer pong question: do you embrace the pressure and understand one good shot keeps you in the game, or do you pretend it&rsquo;s any other shot, aware that any pressure could ruin your flow.  The Lakers want to embrace the pressure.  I&rsquo;m not even sure the Magic know what the word means.</p>

<p><img class="alignright" src="http://danubilla.com/images/www/shaq-superman.jpg" width="300" height="168" title="shaq superman" alt="Before Dwight Howard Became Superman"></p>

<p>It&rsquo;s debatable how many Magic fans rode out the years since their last championship run, but the organization has given little for fans to talk about.  The original era of the Orlando Magic ended in the summer of 1996 when Shaquille O&#8217;Neal left the squad after just three years as the anchor of O-Town&rsquo;s post game.  You know where he left for: the bright lights and cameras of LA.  When Shaq inevitably makes it to Springfield, there&rsquo;ll no doubt be a Lakers jersey hanging by his name.  Any legitimate sports fan should still hold a grudge for Los Angeles.  While any signs making mention of the move would be more than just a little petty, that spite should still fill the crowd in Amway Arena.</p>

<p>With a successful Finals, the NBA will build a smaller fanbase, but one that will last much longer than the alternative, seemingly destined match-up.  The LA market will pull it&rsquo;s share, but it will fans outside of Orlando to care about the team.  If any coming-of-age star can win people over, it&rsquo;s Dwight.  Now it&rsquo;s just a matter of getting those fans ready to be won over.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No Perfect Endings]]></title>
    <link href="http://danubilla.com/blog/music/no-perfect-endings.html"/>
    <updated>2009-06-02T12:00:00-04:00</updated>
    <id>http://danubilla.com/blog/music/no-perfect-endings</id>
    <content type="html"><![CDATA[<p>On October 12, 2004, one of the most anticipated releases of my adolescence hit stores.  I had played the demos out, watched every video, and I waited for my main man John Nolan to step out of the shadow that was Taking Back Sunday and put out his own artistic vision, the self-titled &ldquo;Straylight Run&rdquo;.  I can&rsquo;t claim that the album was all that I had hoped for, but it delivered on plenty of levels.</p>

<!-- more -->


<p>Even though I was a year out of high school, &ldquo;Existentialism on Prom Night&rdquo; became the anthem for my youth that winter.  My girlfriend of the time refused to sing in front of me, but on the right occasion she would belt out the lyrics, &ldquo;Sing like you think noone&rsquo;s listening&rdquo; as strongly and confidently as I&rsquo;m sure it was meant to be returned.  &ldquo;Thin-lipped gorgeous green eyes smiling&rdquo; became the lyric of hope a few summers later, and &ldquo;a failed attempt to capsulize a feeling&rdquo; was a strong songwriting inspiration.  Two songs off of the six-song demo were considered an A- and B-side, each playing off the other to create a greater sense of how members of Taking Back Sunday split off from the rising, successful band to form this new group that craved an identity and needed a definition.  &ldquo;A Slow Descent&rdquo; did not make the album, and a disappointing version of &ldquo;It&rsquo;s for the Best&rdquo; did.  Regardless, Straylight Run represented the first step towards a maturity in music that my punk ethos desperately needed.  It was the first step, but I didn&rsquo;t realize these same songs would represent another leap five years later.</p>
]]></content>
  </entry>
  
</feed>
